@page "/rechner"

<h3 class="mt-4">Hexadezimalrechner</h3>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-3">
            <input type="text" class="form-control" @bind="hexInput1" placeholder="Hexadezimal 1" />
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control" @bind="hexInput2" placeholder="Hexadezimal 2" />
        </div>
        <div class="col-md-5">
            <button class="btn btn-primary" @onclick="Add">Addieren</button>
            <button class="btn btn-primary" @onclick="Subtract">Subtrahieren</button>
            <button class="btn btn-primary" @onclick="Multiply">Multiplizieren</button>
            <button class="btn btn-primary" @onclick="Divide">Dividieren</button>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Ergebnis (Hex)</h5>
                    <p class="card-text">@result</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card mt-3 mt-md-0">
                <div class="card-body">
                    <h5 class="card-title">Ergebnis (Dezimal)</h5>
                    <p class="card-text">@resultDecimal</p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string hexInput1 = "";
    private string hexInput2 = "";
    private string result = "";
    private string resultDecimal = "";
    private string errorMessage = "";

    private void Add()
    {
        CalculateResult((dec1, dec2) => dec1 + dec2);
    }

    private void Subtract()
    {
        CalculateResult((dec1, dec2) => dec1 - dec2);
    }

    private void Multiply()
    {
        CalculateResult((dec1, dec2) => dec1 * dec2);
    }

    private void Divide()
    {
        try
        {
            int dec1 = int.Parse(hexInput1, System.Globalization.NumberStyles.HexNumber);
            int dec2 = int.Parse(hexInput2, System.Globalization.NumberStyles.HexNumber);

            if (dec2 == 0)
            {
                result = "Fehler: Division durch Null ist nicht erlaubt.";
                resultDecimal = "Fehler: Division durch Null ist nicht erlaubt.";
            }
            else
            {
                result = dec1.ToString("X");
                resultDecimal = dec1.ToString();
            }
        }
        catch (Exception ex)
        {
            result = "Fehler: " + ex.Message;
            resultDecimal = "Fehler: " + ex.Message;
        }
    }

    private void CalculateResult(Func<int, int, int> operation)
    {
        try
        {
            int dec1 = int.Parse(hexInput1, System.Globalization.NumberStyles.HexNumber);
            int dec2 = int.Parse(hexInput2, System.Globalization.NumberStyles.HexNumber);
            int resultValue = operation(dec1, dec2);
            result = resultValue.ToString("X");
            resultDecimal = resultValue.ToString();
            errorMessage = "Achtung falscher Input!";
        }
        catch (Exception ex)
        {
            errorMessage = "Error";
            result = "Fehler: " + ex.Message;
            resultDecimal = "Fehler: " + ex.Message;
        }
    }
}
